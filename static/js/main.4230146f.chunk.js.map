{"version":3,"sources":["components/CounterDisplay/CounterDisplay.tsx","components/SetUpDisplay/SetUpDisplay.tsx","styles/theme.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","textField","backgroundColor","borderRadius","CounterDisplay","startValue","maxValue","value","error","countHandler","reset","classes","TextField","className","variant","label","InputLabelProps","style","fontWeight","width","textAlign","transform","type","Button","marginRight","color","onClick","disableRipple","disabled","SetupDisplay","setStartValue","setMaxValue","setHandler","localStorageHandler","onChange","event","Number","parseInt","currentTarget","theme","createMuiTheme","palette","primary","main","background","paper","default","grid","height","marginTop","display","flexDirection","justifyContent","alignItems","App","useState","count","setCount","setError","setDisabled","useEffect","errorHandler","getLocalStorage","sV","localStorage","getItem","mV","clear","ThemeProvider","CssBaseline","Grid","container","spacing","direction","justify","item","xs","key","Paper","elevation","SetUpDisplay","setItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4230146f.chunk.js","sourcesContent":["import React from 'react'\nimport { TextField, Button, makeStyles } from '@material-ui/core'\nimport './../../App.css'\n\ntype CounterDisplayPropsType = {\n\tstartValue: number\n\tmaxValue: number\n\tvalue: number\n\terror: string\n\tcountHandler: () => void\n\treset: () => void\n}\n\nconst useStyles = makeStyles({\n\ttextField: {\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '4px',\n\t},\n})\n\nfunction CounterDisplay({ startValue, maxValue, value, error, countHandler, reset }: CounterDisplayPropsType) {\n\tconst classes = useStyles()\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t{error ? (\n\t\t\t\t\terror\n\t\t\t\t) : (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tlabel=\"Counter\"\n\t\t\t\t\t\tInputLabelProps={{\n\t\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\t\t\twidth: '100px',\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t\ttransform: 'translate(10px, -6px) scale(0.75)',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={value === maxValue ? 'Maximum value reached' : value}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ marginRight: '20px' }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => countHandler()}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tdisabled={!!(value < startValue || value === maxValue || error)}>\n\t\t\t\t\tIncrease\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => reset()}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tdisabled={!!(value <= startValue || error)}>\n\t\t\t\t\tReset\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default CounterDisplay\n","import React, { ChangeEvent } from 'react'\nimport { Button, makeStyles, TextField } from '@material-ui/core'\nimport './../../App.css'\n\ntype SetUpDisplayPropsType = {\n\tstartValue: number\n\tmaxValue: number\n\tdisabled: boolean\n\terror: string\n\tsetStartValue: (value: number) => void\n\tsetMaxValue: (value: number) => void\n\tsetHandler: () => void\n\tlocalStorageHandler: () => void\n}\n\nconst useStyles = makeStyles({\n\ttextField: {\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '4px',\n\t},\n})\nfunction SetupDisplay({\n\tstartValue,\n\tmaxValue,\n\tdisabled,\n\terror,\n\tsetStartValue,\n\tsetMaxValue,\n\tsetHandler,\n\tlocalStorageHandler,\n}: SetUpDisplayPropsType) {\n\tconst onChangeStartValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStartValue(Number.parseInt(event.currentTarget.value))\n\t}\n\n\tconst onChangeMaxValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tsetMaxValue(Number.parseInt(event.currentTarget.value))\n\t}\n\n\tconst classes = useStyles()\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\terror={error === 'Incorrect value'}\n\t\t\t\tlabel=\"Max value\"\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\twidth: '100px',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\ttransform: 'translate(10px, -6px) scale(0.75)',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={maxValue}\n\t\t\t\tonChange={onChangeMaxValueHandler}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\terror={error === 'Incorrect value'}\n\t\t\t\tlabel=\"Start value\"\n\t\t\t\tInputLabelProps={{\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t\tbackgroundColor: 'white',\n\t\t\t\t\t\tborderRadius: '4px',\n\t\t\t\t\t\twidth: '100px',\n\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\ttransform: 'translate(10px, -6px) scale(0.75)',\n\t\t\t\t\t},\n\t\t\t\t}}\n\t\t\t\ttype=\"number\"\n\t\t\t\tvalue={startValue}\n\t\t\t\tonChange={onChangeStartValueHandler}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisableRipple\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetHandler()\n\t\t\t\t\tlocalStorageHandler()\n\t\t\t\t}}\n\t\t\t\tdisabled={disabled}>\n\t\t\t\tSet\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default SetupDisplay\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#101E5A',\n\t\t},\n\t\tbackground: {\n\t\t\tpaper: '#5D80B6',\n\t\t\tdefault: '#909CC4',\n\t\t},\n\t},\n})\n\nexport default theme\n","import React, { useState, useEffect } from 'react'\nimport CounterDisplay from './components/CounterDisplay/CounterDisplay'\nimport SetUpDisplay from './components/SetUpDisplay/SetUpDisplay'\nimport './App.css'\nimport { Grid, Paper, makeStyles, ThemeProvider } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './styles/theme'\n\nconst useStyles = makeStyles({\n\tgrid: {\n\t\theight: '250px',\n\t\tmarginTop: '15vh',\n\t\t// flexWrap: 'nowrap',\n\t},\n\tpaper: {\n\t\twidth: '300px',\n\t\theight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center',\n\t},\n})\n\nfunction App() {\n\tconst [count, setCount] = useState(0)\n\tconst [startValue, setStartValue] = useState(0)\n\tconst [maxValue, setMaxValue] = useState(0)\n\tconst [error, setError] = useState('enter values and press \"set\"')\n\tconst [disabled, setDisabled] = useState(true)\n\n\tuseEffect(() => {\n\t\terrorHandler()\n\t\tgetLocalStorage()\n\t}, [startValue, maxValue]) // eslint-disable-line react-hooks/exhaustive-deps\n\n\tconst countHandler = () => {\n\t\tif (count < maxValue) setCount(count + 1)\n\t}\n\n\tconst errorHandler = () => {\n\t\tif (startValue < 0 || (startValue > 0 && startValue === maxValue) || maxValue < startValue) {\n\t\t\tsetError('Incorrect value')\n\t\t\tsetDisabled(true)\n\t\t} else {\n\t\t\tsetError('Enter values and press \"set\"')\n\t\t\tmaxValue === 0 && startValue === 0 ? setDisabled(true) : setDisabled(false)\n\t\t}\n\t}\n\n\tconst setHandler = () => {\n\t\tif (startValue >= 0 && maxValue > startValue) {\n\t\t\tsetCount(startValue)\n\t\t\tsetError('')\n\t\t}\n\t\tsetDisabled(true)\n\t}\n\n\tconst localStorageHandler = () => {\n\t\tlocalStorage.setItem('startValue', startValue + '')\n\t\tlocalStorage.setItem('maxValue', maxValue + '')\n\t}\n\n\tconst getLocalStorage = () => {\n\t\tif (startValue === 0 && maxValue === 0) {\n\t\t\tconst sV = localStorage.getItem('startValue')\n\t\t\tconst mV = localStorage.getItem('maxValue')\n\t\t\tsV && setStartValue(+sV)\n\t\t\tmV && setMaxValue(+mV)\n\t\t\tlocalStorage.clear()\n\t\t}\n\t}\n\n\tconst reset = () => {\n\t\tsetCount(startValue)\n\t}\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Grid container className={classes.grid} spacing={5} direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t<Grid item xs={3} key={1}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t\t<SetUpDisplay\n\t\t\t\t\t\t\tsetStartValue={setStartValue}\n\t\t\t\t\t\t\tsetMaxValue={setMaxValue}\n\t\t\t\t\t\t\tstartValue={startValue}\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\tsetHandler={setHandler}\n\t\t\t\t\t\t\tlocalStorageHandler={localStorageHandler}\n\t\t\t\t\t\t\tdisabled={disabled}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={3} key={2}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t\t<CounterDisplay\n\t\t\t\t\t\t\tvalue={count}\n\t\t\t\t\t\t\tcountHandler={countHandler}\n\t\t\t\t\t\t\tstartValue={startValue}\n\t\t\t\t\t\t\tmaxValue={maxValue}\n\t\t\t\t\t\t\treset={reset}\n\t\t\t\t\t\t\terror={error}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}