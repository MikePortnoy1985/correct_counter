{"version":3,"sources":["store/reducer.ts","components/CounterDisplay/CounterDisplay.tsx","components/SetUpDisplay/SetUpDisplay.tsx","styles/theme.ts","App.tsx","store/store.ts","index.tsx"],"names":["Actions","initialState","startValue","maxValue","count","error","disabled","setStartValueAC","type","SET_START_VALUE","setMaxValueAC","SET_MAX_VALUE","setErrorAC","SET_ERROR","setDisabledAC","SET_DISABLED","reducer","state","action","COUNT_HANDLER","RESET","SET_HANDLER","CounterDisplay","localState","dispatch","classes","TextField","className","textField","variant","label","InputLabelProps","style","backgroundColor","padding","borderRadius","transform","value","Button","marginRight","color","onClick","disableRipple","SetupDisplay","localStorageHandler","onChange","event","Number","parseInt","currentTarget","theme","createMuiTheme","palette","primary","main","background","paper","default","useStyles","makeStyles","grid","height","marginTop","width","display","flexDirection","justifyContent","alignItems","App","useSelector","useDispatch","useEffect","errorHandler","getLocalStorage","sV","localStorage","getItem","mV","clear","ThemeProvider","CssBaseline","Grid","container","spacing","direction","justify","item","xs","key","Paper","elevation","SetUpDisplay","setItem","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5952f21c.chunk.js","sourcesContent":["export type ReducerStateType = {\n\tstartValue: number\n\tmaxValue: number\n\tcount: number\n\terror: 'enter values and press \"set\"' | 'Incorrect value' | ''\n\tdisabled: boolean\n}\n\nenum Actions {\n\tCOUNT_HANDLER = 'COUNT-HANDLER',\n\tRESET = 'RESET',\n\tSET_HANDLER = 'SET-HANDLER',\n\tSET_START_VALUE = 'SET-START-VALUE',\n\tSET_MAX_VALUE = 'SET-MAX-VALUE',\n\tSET_ERROR = 'SET-ERROR',\n\tSET_DISABLED = 'SET-DISABLED',\n}\n\ntype countHandlerACType = {\n\ttype: Actions.COUNT_HANDLER\n}\n\ntype resetACType = {\n\ttype: Actions.RESET\n}\n\ntype setStartValueACType = {\n\ttype: Actions.SET_START_VALUE\n\tstartValue: number\n}\ntype setMaxValueACType = {\n\ttype: Actions.SET_MAX_VALUE\n\tmaxValue: number\n}\n\ntype setHandlerACType = {\n\ttype: Actions.SET_HANDLER\n}\ntype setErrorACType = {\n\ttype: Actions.SET_ERROR\n\terror: 'enter values and press \"set\"' | 'Incorrect value' | ''\n}\n\ntype setDisabledACType = {\n\ttype: Actions.SET_DISABLED\n\tdisabled: boolean\n}\n\nexport type ActionsType =\n\t| countHandlerACType\n\t| resetACType\n\t| setStartValueACType\n\t| setMaxValueACType\n\t| setHandlerACType\n\t| setErrorACType\n\t| setDisabledACType\n\nconst initialState: ReducerStateType = {\n\tstartValue: 0,\n\tmaxValue: 0,\n\tcount: 0,\n\terror: 'enter values and press \"set\"',\n\tdisabled: true,\n}\n\nconst reducer = (state = initialState, action: ActionsType): ReducerStateType => {\n\tswitch (action.type) {\n\t\tcase Actions.COUNT_HANDLER: {\n\t\t\tif (state.count < state.maxValue) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcount: state.count + 1,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn state\n\t\t\t}\n\t\t}\n\t\tcase Actions.RESET: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcount: state.startValue,\n\t\t\t}\n\t\t}\n\t\tcase Actions.SET_START_VALUE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstartValue: action.startValue,\n\t\t\t}\n\t\t}\n\t\tcase Actions.SET_MAX_VALUE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaxValue: action.maxValue,\n\t\t\t}\n\t\t}\n\t\tcase Actions.SET_HANDLER: {\n\t\t\tif (state.startValue >= 0 && state.maxValue > state.startValue) {\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tcount: state.startValue,\n\t\t\t\t\terror: '',\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn state\n\t\t\t}\n\t\t}\n\t\tcase Actions.SET_ERROR: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\terror: action.error,\n\t\t\t}\n\t\t}\n\t\tcase Actions.SET_DISABLED: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdisabled: action.disabled,\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const countHandlerAC = (): countHandlerACType => {\n\treturn { type: Actions.COUNT_HANDLER }\n}\n\nexport const resetAC = (): resetACType => {\n\treturn { type: Actions.RESET }\n}\nexport const setStartValueAC = (startValue: number): setStartValueACType => {\n\treturn { type: Actions.SET_START_VALUE, startValue }\n}\n\nexport const setMaxValueAC = (maxValue: number): setMaxValueACType => {\n\treturn { type: Actions.SET_MAX_VALUE, maxValue }\n}\n\nexport const setHandlerAC = (): setHandlerACType => {\n\treturn { type: Actions.SET_HANDLER }\n}\n\nexport const setErrorAC = (error: 'enter values and press \"set\"' | 'Incorrect value' | ''): setErrorACType => {\n\treturn { type: Actions.SET_ERROR, error }\n}\n\nexport const setDisabledAC = (disabled: boolean): setDisabledACType => {\n\treturn { type: Actions.SET_DISABLED, disabled }\n}\n\nexport default reducer\n","import React from 'react'\nimport { TextField, Button } from '@material-ui/core'\nimport { ReducerStateType, countHandlerAC, resetAC, ActionsType } from '../../store/reducer'\nimport { Dispatch } from 'redux'\nimport { ClassesType } from '../../App'\n\ntype CounterDisplayPropsType = {\n\tclasses: ClassesType\n\tlocalState: ReducerStateType\n\tdispatch: Dispatch<ActionsType>\n}\n\nfunction CounterDisplay({ localState, dispatch, classes }: CounterDisplayPropsType) {\n\tconst style = {\n\t\tbackgroundColor: 'white',\n\t\tpadding: '0 6px',\n\t\tborderRadius: '4px',\n\t\ttransform: 'translate(11px, -6px) scale(0.75)',\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t{localState.error ? (\n\t\t\t\t\tlocalState.error\n\t\t\t\t) : (\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tclassName={classes.textField}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\tlabel=\"Counter\"\n\t\t\t\t\t\tInputLabelProps={{ style: style }}\n\t\t\t\t\t\tvalue={localState.count === localState.maxValue ? 'Maximum value reached' : localState.count}\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Button\n\t\t\t\t\tstyle={{ marginRight: '20px' }}\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tdispatch(countHandlerAC())\n\t\t\t\t\t}}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\t!!(\n\t\t\t\t\t\t\tlocalState.count < localState.startValue ||\n\t\t\t\t\t\t\tlocalState.count === localState.maxValue ||\n\t\t\t\t\t\t\tlocalState.error\n\t\t\t\t\t\t)\n\t\t\t\t\t}>\n\t\t\t\t\tIncrease\n\t\t\t\t</Button>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\tonClick={() => dispatch(resetAC())}\n\t\t\t\t\tdisableRipple\n\t\t\t\t\tdisabled={!!(localState.count <= localState.startValue || localState.error)}>\n\t\t\t\t\tReset\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n\nexport default CounterDisplay\n","import React, { ChangeEvent } from 'react'\nimport { Button, TextField, Theme } from '@material-ui/core'\nimport { ActionsType, ReducerStateType, setHandlerAC, setMaxValueAC, setStartValueAC } from '../../store/reducer'\nimport { Dispatch } from 'redux'\nimport { ClassesType } from '../../App'\n\ntype SetUpDisplayPropsType = {\n\tclasses: ClassesType\n\tlocalState: ReducerStateType\n\tdispatch: Dispatch<ActionsType>\n\tlocalStorageHandler: () => void\n}\n\nfunction SetupDisplay({ localState, dispatch, localStorageHandler, classes }: SetUpDisplayPropsType) {\n\tconst onChangeStartValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tdispatch(setStartValueAC(Number.parseInt(event.currentTarget.value)))\n\t}\n\n\tconst onChangeMaxValueHandler = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tdispatch(setMaxValueAC(Number.parseInt(event.currentTarget.value)))\n\t}\n\tconst style = {\n\t\tbackgroundColor: 'white',\n\t\tpadding: '0 6px',\n\t\tborderRadius: '4px',\n\t\ttransform: 'translate(11px, -6px) scale(0.75)',\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\terror={localState.error === 'Incorrect value'}\n\t\t\t\tlabel=\"Max value\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tInputLabelProps={{ style: style }}\n\t\t\t\tvalue={localState.maxValue}\n\t\t\t\tonChange={onChangeMaxValueHandler}\n\t\t\t/>\n\t\t\t<TextField\n\t\t\t\tclassName={classes.textField}\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\terror={localState.error === 'Incorrect value'}\n\t\t\t\tlabel=\"Start value\"\n\t\t\t\ttype=\"number\"\n\t\t\t\tInputLabelProps={{ style: style }}\n\t\t\t\tvalue={localState.startValue}\n\t\t\t\tonChange={onChangeStartValueHandler}\n\t\t\t/>\n\t\t\t<Button\n\t\t\t\tdisableRipple\n\t\t\t\tvariant=\"contained\"\n\t\t\t\tcolor=\"primary\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tdispatch(setHandlerAC())\n\t\t\t\t\tlocalStorageHandler()\n\t\t\t\t}}\n\t\t\t\tdisabled={localState.disabled}>\n\t\t\t\tSet\n\t\t\t</Button>\n\t\t</>\n\t)\n}\n\nexport default SetupDisplay\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: '#101E5A',\n\t\t},\n\t\tbackground: {\n\t\t\tpaper: '#5D80B6',\n\t\t\tdefault: '#acbdd3',\n\t\t},\n\t},\n})\n\nexport default theme\n","import React, { useEffect } from 'react'\nimport CounterDisplay from './components/CounterDisplay/CounterDisplay'\nimport SetUpDisplay from './components/SetUpDisplay/SetUpDisplay'\nimport './App.css'\nimport { Grid, Paper, makeStyles, ThemeProvider } from '@material-ui/core'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './styles/theme'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { StoreType } from './store/store'\nimport { ReducerStateType, setDisabledAC, setErrorAC, setMaxValueAC, setStartValueAC } from './store/reducer'\n\nconst useStyles = makeStyles({\n\tgrid: {\n\t\theight: '250px',\n\t\tmarginTop: '15vh',\n\t},\n\tpaper: {\n\t\twidth: '300px',\n\t\theight: '100%',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tjustifyContent: 'space-around',\n\t\talignItems: 'center',\n\t},\n\ttextField: {\n\t\tbackgroundColor: 'white',\n\t\tborderRadius: '4px',\n\t},\n})\n\nexport type StylesType = typeof useStyles\n\nexport type ClassesType = ReturnType<StylesType>\n\nfunction App() {\n\tconst localState = useSelector<StoreType, ReducerStateType>((state) => state.reducer)\n\tconst dispatch = useDispatch()\n\n\tuseEffect(() => {\n\t\terrorHandler()\n\t\tgetLocalStorage()\n\t}, [localState.startValue, localState.maxValue]) // eslint-disable-line react-hooks/exhaustive-deps\n\n\tconst errorHandler = () => {\n\t\tif (\n\t\t\tlocalState.startValue < 0 ||\n\t\t\t(localState.startValue > 0 && localState.startValue === localState.maxValue) ||\n\t\t\tlocalState.maxValue < localState.startValue\n\t\t) {\n\t\t\tdispatch(setErrorAC('Incorrect value'))\n\t\t\tdispatch(setDisabledAC(true))\n\t\t} else {\n\t\t\tdispatch(setErrorAC('enter values and press \"set\"'))\n\t\t\tlocalState.maxValue === 0 && localState.startValue === 0\n\t\t\t\t? dispatch(setDisabledAC(true))\n\t\t\t\t: dispatch(setDisabledAC(false))\n\t\t}\n\t}\n\n\tconst localStorageHandler = () => {\n\t\tlocalStorage.setItem('startValue', localState.startValue + '')\n\t\tlocalStorage.setItem('maxValue', localState.maxValue + '')\n\t}\n\n\tconst getLocalStorage = () => {\n\t\tif (localState.startValue === 0 && localState.maxValue === 0) {\n\t\t\tconst sV = localStorage.getItem('startValue')\n\t\t\tconst mV = localStorage.getItem('maxValue')\n\t\t\tsV && dispatch(setStartValueAC(+sV))\n\t\t\tmV && dispatch(setMaxValueAC(+mV))\n\t\t\tlocalStorage.clear()\n\t\t}\n\t}\n\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<CssBaseline />\n\t\t\t<Grid container className={classes.grid} spacing={5} direction=\"row\" justify=\"center\" alignItems=\"stretch\">\n\t\t\t\t<Grid item xs={3} key={1}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t\t<SetUpDisplay\n\t\t\t\t\t\t\tlocalState={localState}\n\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\tlocalStorageHandler={localStorageHandler}\n\t\t\t\t\t\t\tclasses={classes}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={3} key={2}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={3}>\n\t\t\t\t\t\t<CounterDisplay localState={localState} dispatch={dispatch} classes={classes} />\n\t\t\t\t\t</Paper>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</ThemeProvider>\n\t)\n}\n\nexport default App\n","import { combineReducers, createStore } from 'redux'\nimport reducer from './reducer'\n\nconst rootReducer = combineReducers({\n\treducer: reducer,\n})\n\ntype RootReducerType = typeof rootReducer\n\nexport type StoreType = ReturnType<RootReducerType>\n\nconst store = createStore(rootReducer)\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}